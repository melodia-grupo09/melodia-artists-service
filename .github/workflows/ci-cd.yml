name: CI/CD Pipeline

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

jobs:
  test-and-coverage:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run tests with coverage (requires 75% threshold)
        run: npm run test:cov
        env:
          FORCE_COLOR: true

      - name: Upload coverage reports to Codecov
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: melodia-grupo09/melodia-artists-service

  build:
    runs-on: ubuntu-latest
    needs: test-and-coverage

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: [test-and-coverage, build]
  #   if: github.ref == 'refs/heads/master' && github.event_name == 'push'

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     - name: Install Heroku CLI
  #       run: |
  #         curl https://cli-assets.heroku.com/install.sh | sh

  #     - name: Deploy to Heroku
  #       env:
  #         HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  #         HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
  #         HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
  #       run: |
  #         echo "Setting up Heroku authentication..."
  #         echo "machine api.heroku.com" > ~/.netrc
  #         echo "  login $HEROKU_EMAIL" >> ~/.netrc
  #         echo "  password $HEROKU_API_KEY" >> ~/.netrc
  #         echo "machine git.heroku.com" >> ~/.netrc
  #         echo "  login $HEROKU_EMAIL" >> ~/.netrc
  #         echo "  password $HEROKU_API_KEY" >> ~/.netrc
  #         chmod 600 ~/.netrc
          
  #         echo "Verifying environment variables..."
  #         if [ -z "$HEROKU_APP_NAME" ]; then
  #           echo "Error: HEROKU_APP_NAME is not set"
  #           exit 1
  #         fi
  #         echo "App name: $HEROKU_APP_NAME"
          
  #         echo "Adding Heroku remote..."
  #         heroku git:remote -a "$HEROKU_APP_NAME"
          
  #         echo "Deploying to Heroku..."
  #         git push heroku HEAD:master